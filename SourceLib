local Library = {}
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Player = game.Players.LocalPlayer

-- GUI base
local ui = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui"))
ui.Name = "MobileUILib"
ui.IgnoreGuiInset = true
ui.ResetOnSpawn = false

-- Toggle Button (+ / X)
local toggle = Instance.new("TextButton", ui)
toggle.Size = UDim2.new(0, 60, 0, 60)
toggle.Position = UDim2.new(0, 20, 0.85, 0)
toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
toggle.Text = "+"
toggle.TextColor3 = Color3.new(1,1,1)
toggle.TextScaled = true
toggle.ZIndex = 999

-- Main Frame
local main = Instance.new("Frame", ui)
main.Size = UDim2.new(0.85, 0, 0.7, 0)
main.Position = UDim2.new(0.5, 0, 0.5, 0)
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
main.Visible = false
main.ZIndex = 50

local corner = Instance.new("UICorner", main)
corner.CornerRadius = UDim.new(0, 10)

-- Tabs
local tabHolder = Instance.new("Frame", main)
tabHolder.Size = UDim2.new(0.25, 0, 1, 0)
tabHolder.Position = UDim2.new(0, 0, 0, 0)
tabHolder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

local contentHolder = Instance.new("Frame", main)
contentHolder.Size = UDim2.new(0.75, 0, 1, 0)
contentHolder.Position = UDim2.new(0.25, 0, 0, 0)
contentHolder.BackgroundColor3 = Color3.fromRGB(20, 20, 20)

-- Toggle animation
local isOpen = false
toggle.MouseButton1Click:Connect(function()
	isOpen = not isOpen
	toggle.Text = isOpen and "X" or "+"
	main.Visible = true
	local goal = isOpen and UDim2.new(0.5, 0, 0.5, 0) or UDim2.new(0.5, 0, 1.5, 0)
	TweenService:Create(main, TweenInfo.new(0.35), {Position = goal}):Play()
	if not isOpen then task.delay(0.35, function() main.Visible = false end) end
end)

-- Core Functions
function Library:CreateTab(name)
	local tabButton = Instance.new("TextButton", tabHolder)
	tabButton.Size = UDim2.new(1, 0, 0, 40)
	tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	tabButton.Text = name
	tabButton.TextColor3 = Color3.new(1, 1, 1)
	tabButton.TextScaled = true

	local page = Instance.new("ScrollingFrame", contentHolder)
	page.Size = UDim2.new(1, 0, 1, 0)
	page.CanvasSize = UDim2.new(0, 0, 0, 0)
	page.ScrollBarThickness = 6
	page.BackgroundTransparency = 1
	page.Visible = false

	tabButton.MouseButton1Click:Connect(function()
		for _, v in pairs(contentHolder:GetChildren()) do if v:IsA("ScrollingFrame") then v.Visible = false end end
		page.Visible = true
	end)

	local y = 10
	local function AddItem(obj)
		obj.Position = UDim2.new(0, 10, 0, y)
		y = y + obj.Size.Y.Offset + 10
		page.CanvasSize = UDim2.new(0, 0, 0, y + 10)
	end

	local TabAPI = {}

	function TabAPI:CreateButton(text, callback)
		local btn = Instance.new("TextButton", page)
		btn.Size = UDim2.new(1, -20, 0, 40)
		btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		btn.Text = text
		btn.TextColor3 = Color3.new(1,1,1)
		btn.TextScaled = true
		btn.MouseButton1Click:Connect(callback)
		AddItem(btn)
	end

	function TabAPI:CreateToggle(text, callback)
		local state = false
		local toggle = Instance.new("TextButton", page)
		toggle.Size = UDim2.new(1, -20, 0, 40)
		toggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		toggle.Text = "[ OFF ] " .. text
		toggle.TextColor3 = Color3.new(1, 1, 1)
		toggle.TextScaled = true
		toggle.MouseButton1Click:Connect(function()
			state = not state
			toggle.Text = (state and "[ ON ] " or "[ OFF ] ") .. text
			callback(state)
		end)
		AddItem(toggle)
	end

	function TabAPI:CreateLabel(text)
		local lbl = Instance.new("TextLabel", page)
		lbl.Size = UDim2.new(1, -20, 0, 30)
		lbl.BackgroundTransparency = 1
		lbl.Text = text
		lbl.TextColor3 = Color3.new(1, 1, 1)
		lbl.TextScaled = true
		AddItem(lbl)
	end

	function TabAPI:CreateParagraph(text)
		local para = Instance.new("TextLabel", page)
		para.Size = UDim2.new(1, -20, 0, 60)
		para.BackgroundTransparency = 1
		para.TextWrapped = true
		para.Text = text
		para.TextColor3 = Color3.new(1, 1, 1)
		para.TextScaled = true
		AddItem(para)
	end

	function TabAPI:CreateDropdown(title, options, callback)
		local drop = Instance.new("TextButton", page)
		drop.Size = UDim2.new(1, -20, 0, 40)
		drop.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		drop.Text = title .. " â–¼"
		drop.TextColor3 = Color3.new(1, 1, 1)
		drop.TextScaled = true
		AddItem(drop)

		drop.MouseButton1Click:Connect(function()
			for _, opt in pairs(options) do
				local btn = Instance.new("TextButton", page)
				btn.Size = UDim2.new(1, -40, 0, 30)
				btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				btn.Text = opt
				btn.TextColor3 = Color3.new(1, 1, 1)
				btn.TextScaled = true
				btn.Position = UDim2.new(0, 20, 0, y)
				y = y + 35
				btn.MouseButton1Click:Connect(function()
					callback(opt)
					for _, x in pairs(page:GetChildren()) do
						if x:IsA("TextButton") and x.Text ~= drop.Text then x:Destroy() end
					end
					drop.Text = title .. ": " .. opt
					y = drop.Position.Y.Offset + drop.Size.Y.Offset + 10
					page.CanvasSize = UDim2.new(0, 0, 0, y + 10)
				end)
			end
		end)
	end

	function TabAPI:Notify(msg)
		local notif = Instance.new("TextLabel", ui)
		notif.Size = UDim2.new(0.5, 0, 0, 30)
		notif.Position = UDim2.new(0.25, 0, 0.1, 0)
		notif.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
		notif.Text = msg
		notif.TextColor3 = Color3.new(1, 1, 1)
		notif.TextScaled = true
		notif.ZIndex = 999
		TweenService:Create(notif, TweenInfo.new(0.25), {TextTransparency = 0}):Play()
		task.wait(2)
		TweenService:Create(notif, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
		task.wait(0.3)
		notif:Destroy()
	end

	return TabAPI
end

return Library
