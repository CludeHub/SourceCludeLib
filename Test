local cludelib = {}

-- Function to create a window with tab buttons
function cludelib:createWindow(options)
    local options = options or {}
    local Text = options.Text or "Library"
    local tabNames = options.Tabs or {}  -- A list of tab names
    local tabContents = options.TabContents or {}  -- A list of content for each tab

    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")

    ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
    ScreenGui.Name = "CludeLibWindow"

    Frame.Parent = ScreenGui
    Frame.Size = UDim2.new(0, 400, 0, 300)
    Frame.Position = UDim2.new(0.150, 0, 0, 0)
    Frame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
    Frame.BackgroundTransparency = 0.1

    local FrameCorner = Instance.new("UICorner")
    FrameCorner.Parent = Frame
    FrameCorner.CornerRadius = UDim.new(0, 5)

    -- Title TextLabel
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Parent = Frame
    TitleLabel.Size = UDim2.new(1, 0, 0, 30)
    TitleLabel.Position = UDim2.new(0, 0, 0, 0)
    TitleLabel.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
    TitleLabel.BackgroundTransparency = 0.1
    TitleLabel.Text = Text
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 18
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextAlign = Enum.TextAlignment.Center
    TitleLabel.TextYAlignment = Enum.TextYAlignment.Center

    -- Left Side Tab Frame
    local TabFrame = Instance.new("Frame")
    TabFrame.Parent = ScreenGui
    TabFrame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
    TabFrame.BackgroundTransparency = 0.1
    TabFrame.Size = UDim2.new(0, 160, 0, 300)
    TabFrame.Position = UDim2.new(0.65, 0, 0, 0)

    local TabFrameCorner = Instance.new("UICorner")
    TabFrameCorner.Parent = TabFrame
    TabFrameCorner.CornerRadius = UDim.new(0, 5)

    -- Create tab buttons dynamically
    local yPosition = 10  -- Starting position for the first button
    local tabContentFrames = {}  -- Store content frames for each tab

    for i, tabName in ipairs(tabNames) do
        -- Create Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Parent = TabFrame
        TabButton.Size = UDim2.new(1, 0, 0, 40)
        TabButton.Position = UDim2.new(0, 0, 0, yPosition)
        TabButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Text = tabName
        TabButton.TextSize = 16
        TabButton.Font = Enum.Font.SourceSans
        TabButton.TextAlign = Enum.TextAlignment.Center
        TabButton.TextYAlignment = Enum.TextYAlignment.Center
        TabButton.BackgroundTransparency = 0.1

        -- Create content for each tab
        local ContentFrame = Instance.new("Frame")
        ContentFrame.Parent = Frame
        ContentFrame.Size = UDim2.new(1, 0, 1, -30)  -- Adjust size to fit the window (exclude title height)
        ContentFrame.Position = UDim2.new(0, 0, 0, 30)  -- Place below the title
        ContentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        ContentFrame.Visible = false  -- Hide all content initially

        -- Add custom content for the tab (can be text, buttons, etc.)
        if tabContents[i] then
            local ContentText = Instance.new("TextLabel")
            ContentText.Parent = ContentFrame
            ContentText.Size = UDim2.new(1, 0, 1, 0)
            ContentText.Text = tabContents[i]  -- Content text passed in TabContents
            ContentText.TextColor3 = Color3.fromRGB(255, 255, 255)
            ContentText.TextSize = 16
            ContentText.Font = Enum.Font.SourceSans
            ContentText.TextAlign = Enum.TextAlignment.Center
            ContentText.TextYAlignment = Enum.TextYAlignment.Center
        end

        -- Add an event for button click
        TabButton.MouseButton1Click:Connect(function()
            -- Hide all content frames
            for _, frame in ipairs(tabContentFrames) do
                frame.Visible = false
            end
            -- Show the content for the selected tab
            ContentFrame.Visible = true
        end)

        -- Store the content frame for this tab
        table.insert(tabContentFrames, ContentFrame)

        -- Adjust the vertical position for the next button
        yPosition = yPosition + 50
    end

    -- Show the first tab's content by default
    if #tabContentFrames > 0 then
        tabContentFrames[1].Visible = true
    end
end

return cludelib
